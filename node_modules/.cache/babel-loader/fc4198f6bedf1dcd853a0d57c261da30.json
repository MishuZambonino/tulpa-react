{"ast":null,"code":"var _jsxFileName = \"/Users/mishuzambonino/Documents/GitHub/Teacher-Fernando-React/src/pages/administration/Schedule/components/ScheduleModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Toast } from \"primereact/toast\";\nimport { addFloor } from \"../../../../services/firebase/collection/floor\";\nimport { Button } from \"primereact/button\";\nimport { generateId } from \"../../../../utils/generateId\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ScheduleModal = ({\n  hideDialog,\n  floorEdit,\n  showDialog\n}) => {\n  _s();\n\n  const [floor, setFloor] = useState({\n    id: \"\",\n    number: 0,\n    active: true\n  });\n  const toast = useRef(null);\n  useEffect(() => {\n    setFloor({ ...floorEdit,\n      id: floorEdit.id ? floorEdit.id : generateId()\n    });\n  }, [floorEdit]);\n\n  const saveFloor = async () => {\n    try {\n      const response = await addFloor(floor, floor.id);\n      console.log(response);\n      hideDialog();\n      toast.current.show({\n        severity: \"success\",\n        summary: \"Éxito\",\n        detail: \"Piso guardado con éxito\",\n        life: 3000\n      });\n      setFloor({\n        id: \"\",\n        number: 0,\n        active: true\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleEditFloor = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    const floorCopy = { ...floor\n    };\n    floorCopy[name] = value;\n    setFloor(floorCopy);\n    console.log(floor);\n  };\n\n  const handleCheckChange = event => {\n    const {\n      checked,\n      value\n    } = event;\n    const floorCopy = { ...floor\n    };\n    floorCopy[value] = checked;\n    setFloor(floorCopy);\n    console.log(floor);\n  };\n\n  const floorDialogFooter = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      label: \"Cancelar\",\n      icon: \"pi pi-times\",\n      className: \"p-button-text\",\n      onClick: hideDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Guardar\",\n      icon: \"pi pi-check\",\n      className: \"p-button-text\",\n      onClick: saveFloor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      visible: showDialog,\n      style: {\n        width: \"450px\"\n      },\n      header: \"Detalles del Piso\",\n      modal: true,\n      className: \"p-fluid\",\n      footer: floorDialogFooter,\n      onHide: hideDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Piso:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          id: \"number\",\n          name: \"number\",\n          value: floor.number,\n          onChange: handleEditFloor,\n          required: true,\n          autoFocus: true // className={classNames({\n          //   \"p-invalid\": submitted && !floor.name,\n          // })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-formgrid p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            inputId: \"active\",\n            value: \"active\",\n            checked: floor.active,\n            onChange: handleCheckChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"active\",\n            children: \"Activo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ScheduleModal, \"izsTcOgWOeppTFBlqpuKqniMVL4=\");\n\n_c = ScheduleModal;\nexport default ScheduleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduleModal\");","map":{"version":3,"sources":["/Users/mishuzambonino/Documents/GitHub/Teacher-Fernando-React/src/pages/administration/Schedule/components/ScheduleModal.js"],"names":["React","useEffect","useState","useRef","InputText","Checkbox","Dialog","Toast","addFloor","Button","generateId","ScheduleModal","hideDialog","floorEdit","showDialog","floor","setFloor","id","number","active","toast","saveFloor","response","console","log","current","show","severity","summary","detail","life","e","handleEditFloor","event","name","value","target","floorCopy","handleCheckChange","checked","floorDialogFooter","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Toast } from \"primereact/toast\";\nimport { addFloor } from \"../../../../services/firebase/collection/floor\";\nimport { Button } from \"primereact/button\";\nimport { generateId } from \"../../../../utils/generateId\";\n\nconst ScheduleModal = ({ hideDialog, floorEdit, showDialog }) => {\n  const [floor, setFloor] = useState({\n    id: \"\",\n    number: 0,\n    active: true,\n  });\n  const toast = useRef(null);\n\n  useEffect(() => {\n    setFloor({\n      ...floorEdit,\n      id: floorEdit.id ? floorEdit.id : generateId(),\n    });\n  }, [floorEdit]);\n\n  const saveFloor = async () => {\n    try {\n      const response = await addFloor(floor, floor.id);\n      console.log(response);\n      hideDialog();\n      toast.current.show({\n        severity: \"success\",\n        summary: \"Éxito\",\n        detail: \"Piso guardado con éxito\",\n        life: 3000,\n      });\n      setFloor({\n        id: \"\",\n        number: 0,\n        active: true,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleEditFloor = (event) => {\n    const { name, value } = event.target;\n    const floorCopy = { ...floor };\n    floorCopy[name] = value;\n    setFloor(floorCopy);\n    console.log(floor);\n  };\n  const handleCheckChange = (event) => {\n    const { checked, value } = event;\n    const floorCopy = { ...floor };\n    floorCopy[value] = checked;\n    setFloor(floorCopy);\n    console.log(floor);\n  };\n\n  const floorDialogFooter = (\n    <React.Fragment>\n      <Button\n        label=\"Cancelar\"\n        icon=\"pi pi-times\"\n        className=\"p-button-text\"\n        onClick={hideDialog}\n      />\n      <Button\n        label=\"Guardar\"\n        icon=\"pi pi-check\"\n        className=\"p-button-text\"\n        onClick={saveFloor}\n      />\n    </React.Fragment>\n  );\n\n  return (\n    <>\n      <Toast ref={toast} />\n      <Dialog\n        visible={showDialog}\n        style={{ width: \"450px\" }}\n        header=\"Detalles del Piso\"\n        modal\n        className=\"p-fluid\"\n        footer={floorDialogFooter}\n        onHide={hideDialog}\n      >\n        <div className=\"p-field\">\n          <label htmlFor=\"name\">Piso:</label>\n          <InputText\n            id=\"number\"\n            name=\"number\"\n            value={floor.number}\n            onChange={handleEditFloor}\n            required\n            autoFocus\n            // className={classNames({\n            //   \"p-invalid\": submitted && !floor.name,\n            // })}\n          />\n          {/*{submitted && !product.name && (*/}\n          {/*  <small className=\"p-error\">Name is required.</small>*/}\n          {/*)}*/}\n        </div>\n        <div className=\"p-field\">\n          <div className=\"p-formgrid p-grid\">\n            <Checkbox\n              inputId=\"active\"\n              value=\"active\"\n              checked={floor.active}\n              onChange={handleCheckChange}\n            />\n            <label htmlFor=\"active\">Activo</label>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\nexport default ScheduleModal;\n"]},"metadata":{},"sourceType":"module"}