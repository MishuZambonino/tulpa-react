{"ast":null,"code":"import { databaseFirebase as db } from \"../config\";\nconst UsersRef = db.ref(\"/users\");\nexport const addUser = (uid, params) => {\n  return UsersRef.child(uid).update({ ...params\n  });\n};\nexport const userRemoveAttribute = (uid, attribute) => {\n  return UsersRef.child(uid).child(attribute).remove();\n};\nexport const getUsers = () => {\n  return UsersRef.once(\"value\", snapshot => snapshot.exists() ? snapshot.val() : []);\n};\nexport const getClients = () => {\n  return UsersRef.orderByChild('role').equalTo('client').once(\"value\", snapshot => snapshot.exists() ? snapshot.val() : []);\n};\nexport const getUsersByRole = role => {\n  return UsersRef.orderByChild('role').equalTo(role).once(\"value\", snapshot => snapshot.exists() ? snapshot.val() : []);\n};\nexport const getUserById = uid => {\n  return UsersRef.child(uid).once(\"value\", snapshot => snapshot.exists() ? snapshot.val() : []);\n};\nexport const searchUserByUserName = userName => {\n  return UsersRef.orderByChild('userName').equalTo(userName).once(\"value\");\n};\nexport const listenUsers = callbackFunction => {\n  return UsersRef.on('value', callbackFunction);\n};\nexport const listenUser = (uid, callbackFunction) => {\n  return UsersRef.child(uid).on('value', callbackFunction);\n};\nexport const listenClients = callbackFunction => {\n  return UsersRef.orderByChild('role').equalTo('client').on('value', callbackFunction);\n};","map":{"version":3,"sources":["C:/Users/mishe/Documents/GitHub/tulpa-react/src/services/firebase/operations/users.js"],"names":["databaseFirebase","db","UsersRef","ref","addUser","uid","params","child","update","userRemoveAttribute","attribute","remove","getUsers","once","snapshot","exists","val","getClients","orderByChild","equalTo","getUsersByRole","role","getUserById","searchUserByUserName","userName","listenUsers","callbackFunction","on","listenUser","listenClients"],"mappings":"AAAA,SAAQA,gBAAgB,IAAIC,EAA5B,QAAqC,WAArC;AAEA,MAAMC,QAAQ,GAAGD,EAAE,CAACE,GAAH,CAAO,QAAP,CAAjB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACtC,SAAOJ,QAAQ,CAACK,KAAT,CAAeF,GAAf,EAAoBG,MAApB,CAA2B,EAAC,GAAGF;AAAJ,GAA3B,CAAP;AACD,CAFM;AAIP,OAAO,MAAMG,mBAAmB,GAAG,CAACJ,GAAD,EAAMK,SAAN,KAAoB;AACrD,SAAOR,QAAQ,CAACK,KAAT,CAAeF,GAAf,EAAoBE,KAApB,CAA0BG,SAA1B,EAAqCC,MAArC,EAAP;AACD,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAOV,QAAQ,CAACW,IAAT,CAAc,OAAd,EAAuBC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoBD,QAAQ,CAACE,GAAT,EAApB,GAAqC,EAAxE,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOf,QAAQ,CAACgB,YAAT,CAAsB,MAAtB,EAA8BC,OAA9B,CAAsC,QAAtC,EAAgDN,IAAhD,CAAqD,OAArD,EAA8DC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoBD,QAAQ,CAACE,GAAT,EAApB,GAAqC,EAA/G,CAAP;AACD,CAFM;AAIP,OAAO,MAAMI,cAAc,GAAIC,IAAD,IAAU;AACtC,SAAOnB,QAAQ,CAACgB,YAAT,CAAsB,MAAtB,EAA8BC,OAA9B,CAAsCE,IAAtC,EAA4CR,IAA5C,CAAiD,OAAjD,EAA0DC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoBD,QAAQ,CAACE,GAAT,EAApB,GAAqC,EAA3G,CAAP;AACD,CAFM;AAIP,OAAO,MAAMM,WAAW,GAAGjB,GAAG,IAAI;AAChC,SAAOH,QAAQ,CAACK,KAAT,CAAeF,GAAf,EAAoBQ,IAApB,CAAyB,OAAzB,EAAkCC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoBD,QAAQ,CAACE,GAAT,EAApB,GAAqC,EAAnF,CAAP;AACD,CAFM;AAIP,OAAO,MAAMO,oBAAoB,GAAGC,QAAQ,IAAI;AAC9C,SAAOtB,QAAQ,CAACgB,YAAT,CAAsB,UAAtB,EAAkCC,OAAlC,CAA0CK,QAA1C,EAAoDX,IAApD,CAAyD,OAAzD,CAAP;AACD,CAFM;AAIP,OAAO,MAAMY,WAAW,GAAIC,gBAAD,IAAsB;AAC/C,SAAOxB,QAAQ,CAACyB,EAAT,CAAY,OAAZ,EAAqBD,gBAArB,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,UAAU,GAAG,CAACvB,GAAD,EAAMqB,gBAAN,KAA2B;AACnD,SAAOxB,QAAQ,CAACK,KAAT,CAAeF,GAAf,EAAoBsB,EAApB,CAAuB,OAAvB,EAAgCD,gBAAhC,CAAP;AACD,CAFM;AAIP,OAAO,MAAMG,aAAa,GAAIH,gBAAD,IAAsB;AACjD,SAAOxB,QAAQ,CAACgB,YAAT,CAAsB,MAAtB,EAA8BC,OAA9B,CAAsC,QAAtC,EAAgDQ,EAAhD,CAAmD,OAAnD,EAA4DD,gBAA5D,CAAP;AACD,CAFM","sourcesContent":["import {databaseFirebase as db} from \"../config\";\n\nconst UsersRef = db.ref(\"/users\");\n\nexport const addUser = (uid, params) => {\n  return UsersRef.child(uid).update({...params});\n};\n\nexport const userRemoveAttribute = (uid, attribute) => {\n  return UsersRef.child(uid).child(attribute).remove();\n};\n\nexport const getUsers = () => {\n  return UsersRef.once(\"value\", snapshot => snapshot.exists() ? snapshot.val() : []);\n};\n\nexport const getClients = () => {\n  return UsersRef.orderByChild('role').equalTo('client').once(\"value\", snapshot => snapshot.exists() ? snapshot.val() : []);\n};\n\nexport const getUsersByRole = (role) => {\n  return UsersRef.orderByChild('role').equalTo(role).once(\"value\", snapshot => snapshot.exists() ? snapshot.val() : []);\n};\n\nexport const getUserById = uid => {\n  return UsersRef.child(uid).once(\"value\", snapshot => snapshot.exists() ? snapshot.val() : []);\n};\n\nexport const searchUserByUserName = userName => {\n  return UsersRef.orderByChild('userName').equalTo(userName).once(\"value\");\n};\n\nexport const listenUsers = (callbackFunction) => {\n  return UsersRef.on('value', callbackFunction);\n};\n\nexport const listenUser = (uid, callbackFunction) => {\n  return UsersRef.child(uid).on('value', callbackFunction);\n};\n\nexport const listenClients = (callbackFunction) => {\n  return UsersRef.orderByChild('role').equalTo('client').on('value', callbackFunction);\n};\n"]},"metadata":{},"sourceType":"module"}