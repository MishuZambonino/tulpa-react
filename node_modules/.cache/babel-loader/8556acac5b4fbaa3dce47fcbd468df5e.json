{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mishe\\\\Documents\\\\GitHub\\\\tulpa-react\\\\src\\\\pages\\\\administration\\\\Ocupation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { InputText } from \"primereact/inputtext\";\nimport { AuthContext } from \"../../App\";\nimport SideBarMenu from \"../../components/SideBarMenu\";\nimport { addOcupation, getAllOcupations } from \"../../services/firebase/collection/ocupation\";\nimport { OCUPATION_PAGE } from \"../../constants/routes\";\nimport Table from \"../../components/Table\";\nimport { Column } from \"primereact/column\";\nimport { Button } from \"primereact/button\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Dialog } from \"primereact/dialog\";\nimport \"./ocupation.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Ocupation = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [ocupation, setOcupation] = useState({\n    id: \"\",\n    name: \"\",\n    active: true\n  });\n  const [ocupations, setOcupations] = useState([]);\n  const [globalFilter, setGlobalFilter] = useState(null);\n  const [ocupationDialog, setOcupationDialog] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [isActive, setIsActive] = useState(\"\");\n\n  const actionBodyTemplate = rowData => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-pencil\",\n        className: \"p-button-rounded p-button-success p-mr-2\",\n        onClick: () => editOcupation(rowData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const ocupationsFetched = await getAllOcupations();\n      return {\n        ocupationsFetched\n      };\n    }\n\n    fetchData().then(data => {\n      const {\n        ocupationsFetched\n      } = data;\n      setOcupations(ocupationsFetched.docs.map(d => d.data()));\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const openNew = () => {\n    setOcupation({\n      id: \"\",\n      name: \"\",\n      active: true\n    });\n    setSubmitted(false);\n    setOcupationDialog(true);\n  };\n\n  const hideDialog = () => {\n    setSubmitted(false);\n    setOcupationDialog(false);\n  };\n\n  const ocupationDialogFooter = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      label: \"Cancel\",\n      icon: \"pi pi-times\",\n      className: \"p-button-text\",\n      onClick: hideDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Save\",\n      icon: \"pi pi-check\",\n      className: \"p-button-text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n\n  const editOcupation = ocupation => {\n    setOcupation({ ...ocupation\n    });\n    setOcupationDialog(true);\n  };\n\n  const createOcupation = async event => {\n    try {\n      const response = await addOcupation(ocupation);\n      console.log(\"Se supone que se guardo\");\n    } catch (error) {\n      console.log(error);\n    }\n\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBarMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: ocupations,\n      rows: 10,\n      dataKey: \"id\",\n      emptyMessage: \"No hay el texto\",\n      tableName: \"Ocupaciones\",\n      setGlobalFilter: setGlobalFilter,\n      openNew: openNew,\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        field: \"name\",\n        header: \"Ocupaci\\xF3n\",\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"id\",\n        header: \"Estado\",\n        sortable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        body: actionBodyTemplate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      visible: ocupationDialog,\n      style: {\n        width: \"450px\"\n      },\n      header: \"Detalles de la Ocupaci\\xF3n\",\n      modal: true,\n      className: \"p-fluid\",\n      footer: ocupationDialogFooter,\n      onHide: hideDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Ocupaci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          id: \"name\",\n          value: ocupation.name,\n          onChange: event => setName(event.target.value),\n          required: true,\n          autoFocus: true //className={classNames({ \"p-invalid\": submitted && !product.name })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-formgrid p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            inputId: \"active\",\n            checked: ocupation.active,\n            onChange: event => setIsActive(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"active\",\n            children: \"Activo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Ocupation, \"FsXjEP7JGRAQvuBDW/NH4YnvrFY=\");\n\n_c = Ocupation;\nexport default Ocupation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ocupation\");","map":{"version":3,"sources":["C:/Users/mishe/Documents/GitHub/tulpa-react/src/pages/administration/Ocupation.js"],"names":["React","useContext","useState","useEffect","InputText","AuthContext","SideBarMenu","addOcupation","getAllOcupations","OCUPATION_PAGE","Table","Column","Button","Checkbox","Dialog","Ocupation","user","ocupation","setOcupation","id","name","active","ocupations","setOcupations","globalFilter","setGlobalFilter","ocupationDialog","setOcupationDialog","submitted","setSubmitted","setName","isActive","setIsActive","actionBodyTemplate","rowData","editOcupation","fetchData","ocupationsFetched","then","data","docs","map","d","catch","error","console","log","openNew","hideDialog","ocupationDialogFooter","createOcupation","event","response","preventDefault","width","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { InputText } from \"primereact/inputtext\";\nimport { AuthContext } from \"../../App\";\nimport SideBarMenu from \"../../components/SideBarMenu\";\nimport {\n  addOcupation,\n  getAllOcupations,\n} from \"../../services/firebase/collection/ocupation\";\nimport { OCUPATION_PAGE } from \"../../constants/routes\";\nimport Table from \"../../components/Table\";\nimport { Column } from \"primereact/column\";\nimport { Button } from \"primereact/button\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Dialog } from \"primereact/dialog\";\nimport \"./ocupation.scss\";\n\nconst Ocupation = () => {\n  const { user } = useContext(AuthContext);\n  const [ocupation, setOcupation] = useState({\n    id: \"\",\n    name: \"\",\n    active: true,\n  });\n  const [ocupations, setOcupations] = useState([]);\n  const [globalFilter, setGlobalFilter] = useState(null);\n  const [ocupationDialog, setOcupationDialog] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [isActive, setIsActive] = useState(\"\");\n\n  const actionBodyTemplate = (rowData) => {\n    return (\n      <React.Fragment>\n        <Button\n          icon=\"pi pi-pencil\"\n          className=\"p-button-rounded p-button-success p-mr-2\"\n          onClick={() => editOcupation(rowData)}\n        />\n      </React.Fragment>\n    );\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const ocupationsFetched = await getAllOcupations();\n      return { ocupationsFetched };\n    }\n\n    fetchData()\n      .then((data) => {\n        const { ocupationsFetched } = data;\n        setOcupations(ocupationsFetched.docs.map((d) => d.data()));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const openNew = () => {\n    setOcupation({\n      id: \"\",\n      name: \"\",\n      active: true,\n    });\n    setSubmitted(false);\n    setOcupationDialog(true);\n  };\n  const hideDialog = () => {\n    setSubmitted(false);\n    setOcupationDialog(false);\n  };\n\n  const ocupationDialogFooter = (\n    <React.Fragment>\n      <Button\n        label=\"Cancel\"\n        icon=\"pi pi-times\"\n        className=\"p-button-text\"\n        onClick={hideDialog}\n      />\n      <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" />\n    </React.Fragment>\n  );\n\n  const editOcupation = (ocupation) => {\n    setOcupation({ ...ocupation });\n    setOcupationDialog(true);\n  };\n  const createOcupation = async (event) => {\n    try {\n      const response = await addOcupation(ocupation);\n      console.log(\"Se supone que se guardo\");\n    } catch (error) {\n      console.log(error);\n    }\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <SideBarMenu />\n      <Table\n        data={ocupations}\n        rows={10}\n        dataKey=\"id\"\n        emptyMessage=\"No hay el texto\"\n        tableName=\"Ocupaciones\"\n        setGlobalFilter={setGlobalFilter}\n        openNew={openNew}\n      >\n        <Column field=\"name\" header=\"Ocupación\" sortable />\n        <Column field=\"id\" header=\"Estado\" sortable />\n        <Column body={actionBodyTemplate}></Column>\n      </Table>\n      <Dialog\n        visible={ocupationDialog}\n        style={{ width: \"450px\" }}\n        header=\"Detalles de la Ocupación\"\n        modal\n        className=\"p-fluid\"\n        footer={ocupationDialogFooter}\n        onHide={hideDialog}\n      >\n        <div className=\"p-field\">\n          <label htmlFor=\"name\">Ocupación:</label>\n          <InputText\n            id=\"name\"\n            value={ocupation.name}\n            onChange={(event) => setName(event.target.value)}\n            required\n            autoFocus\n            //className={classNames({ \"p-invalid\": submitted && !product.name })}\n          />\n          {/*{submitted && !product.name && (*/}\n          {/*  <small className=\"p-error\">Name is required.</small>*/}\n          {/*)}*/}\n        </div>\n        <div className=\"p-field\">\n          <div className=\"p-formgrid p-grid\">\n            <Checkbox\n              inputId=\"active\"\n              checked={ocupation.active}\n              onChange={(event) => setIsActive(event.target.value)}\n            />\n            <label htmlFor=\"active\">Activo</label>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Ocupation;\n"]},"metadata":{},"sourceType":"module"}