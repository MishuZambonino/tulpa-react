{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mishe\\\\Documents\\\\GitHub\\\\tulpa-react\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport { Button } from 'primereact/button';\nimport { SignInAdmin } from \"../services/firebase/auth\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { LOGIN_PAGE } from \"../constants/routes\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (user && !error) {\n      history.push(LOGIN_PAGE);\n    }\n  }, [history, user, error]);\n\n  const handleSubmit = event => {\n    SignInAdmin(email, password).then(async resp => {\n      if (resp) {\n        const userFetched = await getUserById(resp.user.uid);\n        const user = userFetched.val();\n\n        if (user) {\n          history.push(LOGIN_PAGE);\n        } else {\n          setError(\"You have to be an admin!\");\n        }\n      }\n    }).catch(error => {\n      console.log(\"error:\", error);\n      const messageError = isEqual(error.code, \"auth/wrong-password\") ? \"Wrong Password\" : \"Invalid e-mail\";\n      setError(messageError);\n    });\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-title\",\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"p-float-label\",\n        children: [/*#__PURE__*/_jsxDEV(InputText, {\n          id: \"in\",\n          className: \"w-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"in\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"p-float-label\",\n        children: [/*#__PURE__*/_jsxDEV(Password, {\n          toggleMask: true,\n          feedback: false,\n          id: \"inPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inPassword\",\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-password-div\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./\",\n          children: \"Olvid\\xE9 mi contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sign-in-button-div\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          label: \"Ingresar\",\n          className: \"login-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"HdDOwd4kNCE90bk1EJH5kEshZjw=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/mishe/Documents/GitHub/tulpa-react/src/pages/Login.js"],"names":["InputText","Password","Button","SignInAdmin","useContext","useEffect","useState","LOGIN_PAGE","Login","user","AuthContext","email","setEmail","password","setPassword","error","setError","history","push","handleSubmit","event","then","resp","userFetched","getUserById","uid","val","catch","console","log","messageError","isEqual","code","preventDefault"],"mappings":"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","sourcesContent":["import { InputText } from 'primereact/inputtext';\r\nimport {Password} from 'primereact/password';\r\nimport { Button } from 'primereact/button';\r\nimport { SignInAdmin } from \"../services/firebase/auth\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {LOGIN_PAGE} from \"../constants/routes\";\r\nimport \"../App.css\" \r\n\r\nfunction Login() {\r\n    const { user } = useContext(AuthContext);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (user && !error) {\r\n            history.push(LOGIN_PAGE);\r\n        }\r\n    }, [history, user, error]);\r\n\r\n    const handleSubmit = (event) => {\r\n        SignInAdmin(email, password)\r\n            .then(async (resp) => {\r\n                if (resp) {\r\n                    const userFetched = await getUserById(resp.user.uid);\r\n                    const user = userFetched.val();\r\n                    if (user) {\r\n                        history.push(LOGIN_PAGE);\r\n                    } else {\r\n                        setError(\"You have to be an admin!\");\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error:\", error);\r\n                const messageError = isEqual(error.code, \"auth/wrong-password\")\r\n                    ? \"Wrong Password\"\r\n                    : \"Invalid e-mail\";\r\n                setError(messageError);\r\n            });\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-div\">\r\n                <h1 className=\"login-title\">Iniciar sesión</h1>\r\n                <span className=\"p-float-label\">\r\n                    <InputText id=\"in\" className=\"w-100\"/>\r\n                    <label htmlFor=\"in\">Email</label>\r\n                </span>\r\n                <span className=\"p-float-label\">\r\n                    <Password toggleMask feedback={false} id=\"inPassword\"/>\r\n                    <label htmlFor=\"inPassword\">Contraseña</label>\r\n                </span>\r\n                <div className=\"forgot-password-div\">\r\n                    <a href=\"./\">Olvidé mi contraseña</a>\r\n                </div>\r\n                <div className=\"sign-in-button-div\">\r\n                    <Button type=\"button\" label=\"Ingresar\" className=\"login-button\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}